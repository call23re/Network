"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[97],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>m});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return r?t.createElement(f,i(i({ref:n},p),{},{components:r})):t.createElement(f,i({ref:n},p))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},68318:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var t=r(87462),o=(r(67294),r(3905));const a={sidebar_position:6},i=void 0,s={unversionedId:"Chaining",id:"Chaining",title:"Chaining",description:"In the context of this library, chaining is when methods return self or when promises return new promises.",source:"@site/docs/Chaining.md",sourceDirName:".",slug:"/Chaining",permalink:"/Network/docs/Chaining",draft:!1,editUrl:"https://github.com/call23re/Network/edit/master/docs/Chaining.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"defaultSidebar",previous:{title:"Hooks",permalink:"/Network/docs/Hooks"},next:{title:"Error Handling",permalink:"/Network/docs/Error Handling"}},c={},l=[],p={toc:l};function u(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In the context of this library, chaining is when methods return self or when promises return new promises."),(0,o.kt)("p",null,"You use chaining to apply hooks when registering remotes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'Encoded = Network.Event.new()\n                :inbound(Middleware.Logger, "Shared")\n                :inbound(Transformers.Decode, "Shared")\n                :outbound(Middleware.Logger, "Shared")\n                :outbound(Transformers.Encode, "Shared")\n                :warn(true)\n')),(0,o.kt)("p",null,"Because ",(0,o.kt)("inlineCode",{parentName:"p"},"inbound"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"outbound"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"warn")," return ",(0,o.kt)("inlineCode",{parentName:"p"},"self"),", you can call them in succession in a single statement."),(0,o.kt)("p",null,"You also use chaining in any case in which promises are used."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"TestFunction:InvokeServer(1, 2, 3)\n    :andThen(function(a, b, c)\n        assert(a == 2)\n        assert(b == 3)\n        assert(c == 4)\n        print(a, b, c)\n    end)\n    :catch(warn)\n")),(0,o.kt)("p",null,"See: ",(0,o.kt)("a",{parentName:"p",href:"https://eryn.io/roblox-lua-promise/docs/Tour#chaining"},"https://eryn.io/roblox-lua-promise/docs/Tour#chaining")," for more information."),(0,o.kt)("p",null,"It's also used in a special case when catching hook errors from connections. In this example, ",(0,o.kt)("inlineCode",{parentName:"p"},":catch")," is chained on to ",(0,o.kt)("inlineCode",{parentName:"p"},":Connect"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"Foo.OnServerEvent:Connect(function(value)\n    print(value)\nend):catch(warn)\n")))}u.isMDXComponent=!0}}]);