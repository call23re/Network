"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[429],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(a),m=n,v=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return a?r.createElement(v,l(l({ref:t},u),{},{components:a})):r.createElement(v,l({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>l});var r=a(67294),n=a(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(o,l),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>m});var r=a(87462),n=a(67294),o=a(86010),l=a(72389),i=a(67392),s=a(7094),c=a(12466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,a;const{lazy:l,block:d,defaultValue:m,values:v,groupId:f,className:g}=e,b=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=v?v:b.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),y=(0,i.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const S=null===m?m:null!=(t=null!=m?m:null==(a=b.find((e=>e.props.default)))?void 0:a.props.value)?t:b[0].props.value;if(null!==S&&!h.some((e=>e.value===S)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+S+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:R}=(0,s.U)(),[E,w]=(0,n.useState)(S),T=[],{blockElementScrollPositionUntilNextRender:O}=(0,c.o5)();if(null!=f){const e=k[f];null!=e&&e!==E&&h.some((t=>t.value===e))&&w(e)}const N=e=>{const t=e.currentTarget,a=T.indexOf(t),r=h[a].value;r!==E&&(O(t),w(r),null!=f&&R(f,String(r)))},x=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var r;const t=T.indexOf(e.currentTarget)+1;a=null!=(r=T[t])?r:T[0];break}case"ArrowLeft":{var n;const t=T.indexOf(e.currentTarget)-1;a=null!=(n=T[t])?n:T[T.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,o.Z)("tabs-container",u)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},g)},h.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:e=>T.push(e),onKeyDown:x,onFocus:N,onClick:N},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":E===t})}),null!=a?a:t)}))),l?(0,n.cloneElement)(b.filter((e=>e.props.value===E))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==E})))))}function m(e){const t=(0,l.Z)();return n.createElement(d,(0,r.Z)({key:String(t)},e))}},89167:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=a(87462),n=(a(67294),a(3905)),o=a(65488),l=a(85162);const i={sidebar_position:3},s=void 0,c={unversionedId:"Getting Started/Remote Events",id:"Getting Started/Remote Events",title:"Remote Events",description:"",source:"@site/docs/Getting Started/Remote Events.md",sourceDirName:"Getting Started",slug:"/Getting Started/Remote Events",permalink:"/Network/docs/Getting Started/Remote Events",draft:!1,editUrl:"https://github.com/call23re/Network/edit/master/docs/Getting Started/Remote Events.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Register",permalink:"/Network/docs/Getting Started/Register"},next:{title:"Remote Functions",permalink:"/Network/docs/Getting Started/Remote Functions"}},u={},p=[{value:"Sending Data",id:"sending-data",level:2},{value:"Receiving Data",id:"receiving-data",level:2}],d={toc:p};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A RemoteEvent is designed to provide a one-way message between the server and clients, allowing Scripts to call code in LocalScripts and vice-versa. This message can be directed from one client to the server, from the server to a particular client, from the server to all clients, from the server to a list of clients, or from the server to all clients except some list of clients."),(0,n.kt)("p",null,"For more information, see the ",(0,n.kt)("a",{parentName:"p",href:"/api/RemoteEvent"},"API Reference"),"."),(0,n.kt)("h2",{id:"sending-data"},"Sending Data"),(0,n.kt)(o.Z,{defaultValue:"Server",groupId:"Send",values:[{label:"Server",value:"Server"},{label:"Client",value:"Client"}],mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"Server",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="ServerScriptService/Main.lua"',title:'"ServerScriptService/Main.lua"'},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Remotes = require(ReplicatedStorage.Remotes)\n\nlocal Player = ...\n\nlocal Foo = Remotes.GetEvent("Foo")\nFoo:FireClient(Player, "bar", "baz"):catch(warn)\n'))),(0,n.kt)(l.Z,{value:"Client",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="StarterPlayerScripts/Main.lua"',title:'"StarterPlayerScripts/Main.lua"'},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Remotes = require(ReplicatedStorage.Remotes)\n\nlocal Foo = Remotes.GetEvent("Foo")\nFoo:FireServer("bar", "baz"):catch(warn)\n')))),(0,n.kt)("p",null,"Firing a Remote Event returns a promise. This is because hooks can fail, and if they do, it is important to ",(0,n.kt)("a",{parentName:"p",href:"https://eryn.io/roblox-lua-promise/api/Promise#catch"},"catch")," them. If you have a hook that mutates data in any way, you can use ",(0,n.kt)("a",{parentName:"p",href:"https://eryn.io/roblox-lua-promise/api/Promise#andThen"},"andThen")," to grab a snapshot of the data that is ultimately sent. If you're not using any hooks, you don't need to chain anything."),(0,n.kt)("h2",{id:"receiving-data"},"Receiving Data"),(0,n.kt)(o.Z,{defaultValue:"Server",groupId:"Receive",values:[{label:"Server",value:"Server"},{label:"Client",value:"Client"}],mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"Server",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="ServerScriptService/Main.lua"',title:'"ServerScriptService/Main.lua"'},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Remotes = require(ReplicatedStorage.Remotes)\n\nlocal Foo = Remotes.GetEvent("Foo")\nFoo:FireAllClients("bar")\n\nFoo.OnServerEvent:Connect(function(value)\n    print(value)\n    -- qux\nend):catch(warn)\n'))),(0,n.kt)(l.Z,{value:"Client",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="StarterPlayerScripts/Main.lua"',title:'"StarterPlayerScripts/Main.lua"'},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Remotes = require(ReplicatedStorage.Remotes)\n\nlocal Foo = Remotes.GetEvent("Foo")\nFoo:FireServer("qux")\n\nFoo.OnClientEvent:Connect(function(value)\n    print(value)\n    -- bar\nend):catch(warn)\n')))),(0,n.kt)("p",null,"Inbound hooks are fired on event as well. Events can catch hook errors via ",(0,n.kt)("inlineCode",{parentName:"p"},"catch"),". If you're not using any hooks, you don't need to include catch."))}m.isMDXComponent=!0}}]);