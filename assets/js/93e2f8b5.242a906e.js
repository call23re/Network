"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[899],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,v=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(v,l(l({ref:t},u),{},{components:n})):a.createElement(v,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),r=n(67294),o=n(86010),l=n(72389),i=n(67392),c=n(7094),s=n(12466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,n;const{lazy:l,block:d,defaultValue:m,values:v,groupId:y,className:f}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=v?v:b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),h=(0,i.l)(g,((e,t)=>e.value===t.value));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const S=null===m?m:null!=(t=null!=m?m:null==(n=b.find((e=>e.props.default)))?void 0:n.props.value)?t:b[0].props.value;if(null!==S&&!g.some((e=>e.value===S)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+S+'" but none of its children has the corresponding value. Available values are: '+g.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:R}=(0,c.U)(),[w,N]=(0,r.useState)(S),T=[],{blockElementScrollPositionUntilNextRender:O}=(0,s.o5)();if(null!=y){const e=k[y];null!=e&&e!==w&&g.some((t=>t.value===e))&&N(e)}const E=e=>{const t=e.currentTarget,n=T.indexOf(t),a=g[n].value;a!==w&&(O(t),N(a),null!=y&&R(y,String(a)))},P=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=T.indexOf(e.currentTarget)+1;n=null!=(a=T[t])?a:T[0];break}case"ArrowLeft":{var r;const t=T.indexOf(e.currentTarget)-1;n=null!=(r=T[t])?r:T[T.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},f)},g.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>T.push(e),onKeyDown:P,onFocus:E,onClick:E},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),l?(0,r.cloneElement)(b.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,l.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},24063:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905)),o=n(65488),l=n(85162);const i={sidebar_position:4},c=void 0,s={unversionedId:"Getting Started/Remote Functions",id:"Getting Started/Remote Functions",title:"Remote Functions",description:"",source:"@site/docs/Getting Started/Remote Functions.md",sourceDirName:"Getting Started",slug:"/Getting Started/Remote Functions",permalink:"/Network/docs/Getting Started/Remote Functions",draft:!1,editUrl:"https://github.com/call23re/Network/edit/master/docs/Getting Started/Remote Functions.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Remote Events",permalink:"/Network/docs/Getting Started/Remote Events"},next:{title:"Hooks",permalink:"/Network/docs/Hooks"}},u={},p=[{value:"Invoking the Server",id:"invoking-the-server",level:2},{value:"Invoking the Client",id:"invoking-the-client",level:2}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A RemoteFunction is used to create in-game APIs that both the client and the server can use to communicate with each other. A RemoteFunction can be invoked (called) to do a certain action and return the results. If you don't need a response, use a ",(0,r.kt)("a",{parentName:"p",href:"/docs/Getting%20Started/Remote%20Events"},"RemoteEvent")," instead."),(0,r.kt)("p",null,"For more information, see the ",(0,r.kt)("a",{parentName:"p",href:"/api/RemoteFunction"},"API Reference"),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"While native Roblox RemoteFunctions will yield, ",(0,r.kt)("inlineCode",{parentName:"p"},"Network")," RemoteFunctions are asynchronous. This is because they use RemoteEvents under the hood. RemoteFunction invocations are promise-based, so if you prefer to yield, use ",(0,r.kt)("a",{parentName:"p",href:"https://eryn.io/roblox-lua-promise/api/Promise#await"},"Promise:await"),".")),(0,r.kt)("h2",{id:"invoking-the-server"},"Invoking the Server"),(0,r.kt)(o.Z,{defaultValue:"Server",groupId:"Server",values:[{label:"Server",value:"Server"},{label:"Client",value:"Client"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Server",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="ServerScriptService/Main.lua"',title:'"ServerScriptService/Main.lua"'},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Remotes = require(ReplicatedStorage.Remotes)\n\nlocal State = {...}\n\nlocal GetState = Remotes.GetFunction("GetState")\nGetState.OnServerInvoke = function() return State end\n'))),(0,r.kt)(l.Z,{value:"Client",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="StarterPlayerScripts/Main.lua"',title:'"StarterPlayerScripts/Main.lua"'},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Remotes = require(ReplicatedStorage.Remotes)\n\nlocal GetState = Remotes.GetFunction("GetState")\nlocal ok, State = GetState:InvokeServer():await()\n')))),(0,r.kt)("h2",{id:"invoking-the-client"},"Invoking the Client"),(0,r.kt)(o.Z,{defaultValue:"Server",groupId:"Client",values:[{label:"Server",value:"Server"},{label:"Client",value:"Client"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Server",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="ServerScriptService/Main.lua"',title:'"ServerScriptService/Main.lua"'},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Remotes = require(ReplicatedStorage.Remotes)\n\nlocal Player = ...\n\nlocal Ready = Remotes.GetFunction("Ready")\nReady:InvokeClient(Player)\n        :andThen(function(isReady)\n            assert(type(isReady) == "boolean")\n            print(Player, "is", isReady and "ready" or "not ready")\n        end)\n        :catch(warn)\n'))),(0,r.kt)(l.Z,{value:"Client",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="StarterPlayerScripts/Main.lua"',title:'"StarterPlayerScripts/Main.lua"'},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Remotes = require(ReplicatedStorage.Remotes)\n\nlocal Ready = Remotes.GetFunction("Ready")\nReady.OnClientInvoke = function()\n    return math.random() > 0.5\nend\n')))),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Even though you ",(0,r.kt)("em",{parentName:"p"},"can")," invoke the client, the client can still wait indefinitely to respond. While this won't yield, you still need some logic to clean up the promise under certain circumstances (like if the player leaves the game). Generally, it is bad practice to invoke the client.")))}m.isMDXComponent=!0}}]);