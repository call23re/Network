"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[856],{42333:e=>{e.exports=JSON.parse('{"functions":[{"name":"GetEvent","desc":"\\t","params":[{"name":"name","desc":"The name of the remote event.","lua_type":"string"}],"returns":[{"desc":"","lua_type":"RemoteEvent"}],"function_type":"static","source":{"line":145,"path":"src/Register.lua"}},{"name":"GetFunction","desc":"\\t","params":[{"name":"name","desc":"The name of the remote function.","lua_type":"string"}],"returns":[{"desc":"","lua_type":"RemoteFunction"}],"function_type":"static","source":{"line":159,"path":"src/Register.lua"}},{"name":"GetValue","desc":"\\t","params":[{"name":"name","desc":"The name of the value.","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Value"}],"function_type":"static","source":{"line":173,"path":"src/Register.lua"}}],"properties":[],"types":[],"name":"Register","desc":"Registers a dictionary of remotes where the key is the name of the remote and the value is a RemoteEvent or RemoteFunction class.\\n\\n```lua\\n\\t-- ReplicatedStorage/Remotes.lua\\n\\tlocal Network = require(...Network)\\n\\treturn Network.Register({\\n\\t\\tFooEvent = Network.Event.new(),\\n\\t\\tBarFunction = Network.Function.new(),\\n\\t\\tBazValue = Network.Value.new(\\"String\\")\\n\\t})\\n```","source":{"line":40,"path":"src/Register.lua"}}')}}]);